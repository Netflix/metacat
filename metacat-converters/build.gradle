/*
 * Copyright 2016 Netflix, Inc.
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *        http://www.apache.org/licenses/LICENSE-2.0
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

apply plugin: 'java'

ext {
    generatedMapperSourcesDir = "${buildDir}/generated-src/mapstruct/main"
    excludePattern = "**/com/netflix/metacat/converters/impl/*ConvertersImpl.java"
}

configurations {
    mapstruct
}

dependencies {
    compile project(':metacat-common-server')
    compile "com.facebook.presto:presto-main:${presto_version}"
    compile "com.google.guava:guava:${guava_version}"
    compile "com.google.inject:guice:${guice_version}"
    compile "org.slf4j:slf4j-api:${slf4j_version}"
    compile 'org.apache.pig:pig:0.14.0'
    compile("com.facebook.presto:presto-hive:${presto_version}") {
        exclude group: 'org.apache.thrift'
    }
    compile("com.facebook.presto:presto-hive-hadoop2:${presto_version}") {
        exclude group: 'org.apache.thrift'
    }
    compile 'org.apache.thrift:libfb303:0.9.0'
    compile 'org.apache.thrift:libthrift:0.9.0'
    compile 'org.mapstruct:mapstruct-jdk8:1.0.0.Beta4'
    testCompile 'de.danielbechler:java-object-diff:0.91.1'
    mapstruct('org.mapstruct:mapstruct-processor:1.0.0.Beta4')
}

sourceSets.main {
    ext.originalJavaSrcDirs = java.srcDirs
    java.srcDir "${generatedMapperSourcesDir}"
}

task generateMainMapperClasses(type: JavaCompile) {
    //class output dir, required by JavaCompile
    ext.aptDumpDir = file("${buildDir}/tmp/apt/mapstruct")
    destinationDir = aptDumpDir

    classpath = compileJava.classpath + configurations.mapstruct
    source = sourceSets.main.originalJavaSrcDirs
    ext.sourceDestDir = file("$generatedMapperSourcesDir")

    options.define(
            compilerArgs: [
                    '-nowarn',
                    '-proc:only',
                    '-encoding', 'UTF-8',
                    '-processor', 'org.mapstruct.ap.MappingProcessor',
                    '-s', sourceDestDir.absolutePath,
                    '-source', '1.8',
                    '-target', '1.8',
            ]
    );

    inputs.dir source
    outputs.dir generatedMapperSourcesDir;
    doFirst {
        sourceDestDir.mkdirs()
    }
    doLast {
        aptDumpDir.delete()
    }
}

tasks.withType(Checkstyle) {
    exclude excludePattern
}

tasks.withType(Pmd) {
    exclude excludePattern
}

compileJava.dependsOn generateMainMapperClasses
compileJava.options.define(compilerArgs: ['-proc:none', '-encoding', 'UTF-8'])
compileTestJava.options.define(compilerArgs: ['-proc:none', '-encoding', 'UTF-8'])
