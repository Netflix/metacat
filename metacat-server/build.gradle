/*
 *
 *  Copyright 2017 Netflix, Inc.
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 *
 */

apply plugin: "war"
apply plugin: "jetty"

configurations {
    all*.exclude module: "slf4j-jdk14"
    all*.exclude module: "log4j-over-slf4j"
    all*.exclude module: "jsr311-api"
    all*.exclude module: "logback-classic"
    all*.exclude module: "logback-core"
    all*.exclude group: "com.sun.jersey"
}

dependencies {
    /*******************************
     * Compile Dependencies
     *******************************/

    compile(project(":metacat-main"))
    compile(project(":metacat-user-metadata-mysql"))

    compile("com.squarespace.jersey2-guice:jersey2-guice:${jersey2_guice_version}") {
        exclude group: "com.google.inject"
        exclude group: "com.google.inject.extensions"
    }
    compile("com.wordnik:swagger-jersey2-jaxrs_2.10:${swagger_version}") {
        exclude group: "com.sun.jersey"
        exclude group: "javax.servlet"
    }
    compile("org.glassfish.jersey.containers:jersey-container-servlet:${jersey_version}")
    compile("org.glassfish.jersey.media:jersey-media-json-jackson:${jersey_version}")
    compile("org.slf4j:slf4j-log4j12")

    /*******************************
     * Provided Dependencies
     *******************************/

    compileOnly("javax.servlet:javax.servlet-api")

    /*******************************
     * Runtime Dependencies
     *******************************/

    /*******************************
     * Test Dependencies
     *******************************/
}

task(console, dependsOn: "testClasses", type: JavaExec) {
    main = "groovy.ui.Console"
    classpath = sourceSets.test.runtimeClasspath
}

war {
    baseName = "metacat"
    doLast{
        copy{
            from(war.archivePath) {
                rename "metacat(.*).war", "metacat.war"
            }
            into project.parent.buildDir.absolutePath
        }
    }
}

jettyRunWar {
    httpPort = 7001
    contextPath = ""
}
